BEGIN;

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE DOMAIN EMAIL AS TEXT CHECK ( value ~ '^[\w\-\.]+@([\w-]+\.)+[\w-]+$');

CREATE DOMAIN PASSWORD AS TEXT CHECK ( value ~ '^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$');

CREATE DOMAIN ZIPCODE AS text CHECK (
    -- 63000 Ã  63999
    VALUE ~ '63\d{3}' 
);

-- BEGIN;
CREATE TABLE IF NOT EXISTS public.product(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  subtitle VARCHAR(100) NULL,
  description TEXT NOT NULL,
  image TEXT NULL,
  price NUMERIC(10,2) NOT NULL,
  is_new BOOLEAN NOT NULL DEFAULT FALSE,
  slug TEXT NULL,
  dimension TEXT NULL,
  weight NUMERIC(10,2) NULL,
  category VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS public.blog(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR(100) NOT NULL,
  description TEXT NOT NULL,
  image TEXT NULL,
  interaction VARCHAR(100) NULL,
  slug VARCHAR(100) NULL,
  created_at timestamptz NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS public.delivery_area(
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  city VARCHAR(100) NOT NULL,
  zipcode ZIPCODE NOT NULL,
  price NUMERIC(10,2) NOT NULL
);

CREATE TABLE IF NOT EXISTS public.user (
  id uuid PRIMARY KEY DEFAULT uuid_generate_v4(),
  email EMAIL NULL UNIQUE,
  password PASSWORD NULL,
  lastname VARCHAR(100) NULL,
  firstname VARCHAR(100) NULL,
  address JSON NULL,
  phone VARCHAR(20) NULL,
  role VARCHAR(50) NULL,
  newsletter_optin BOOLEAN NULL DEFAULT false,
  token TEXT NULL,
  expirationTime timestamptz NULL, 
  created_at timestamptz NOT NULL DEFAULT NOW(),
  update_at timestamptz NULL
);

CREATE TABLE IF NOT EXISTS public.order_details (
  id uuid PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  booking_date TIMESTAMP NOT NULL,
  payment_id VARCHAR(100) NOT NULL,
  total NUMERIC(10, 2) NOT NULL,
  created_at timestamptz NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS public.payment_details (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  order_id uuid NULL,
  payment_id VARCHAR(100) NOT NULL UNIQUE,
  status VARCHAR(50) NOT NULL,
  amount NUMERIC(10, 2) NOT NULL,
  payment_mode VARCHAR(50) NOT NULL,
  payment_date TIMESTAMP NULL,
  created_at timestamptz NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS public.order_items (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  order_id uuid NOT NULL,
  product_id INTEGER NULL,
  quantity INTEGER NOT NULL,
  created_at timestamptz NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS public.review (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  description TEXT NOT NULL,
  author VARCHAR(50) NOT NULL,
  date VARCHAR(20) NOT NULL,
  star INTEGER NULL,
  source VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS public.special_day (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  date TIMESTAMP NOT NULL,
  plate_quantity INT NULL,
  closind_day BOOLEAN NULL,
  created_at timestamptz NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS public.voucher (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    voucher_id TEXT NOT NULL,
    expiration_date timestamptz NOT NULL,
    initial_amount NUMERIC(10,2) NOT NULL,
    amount_used NUMERIC(10,2) NULL,
    date_use timestamptz NULL,
    created_at timestamptz NOT NULL DEFAULT NOW()
);

-- ? FOREIGN KEY
ALTER TABLE order_items ADD FOREIGN KEY (order_id) REFERENCES order_details(id);
ALTER TABLE order_items ADD FOREIGN KEY (product_id) REFERENCES product(id);
ALTER TABLE order_details ADD FOREIGN KEY (user_id) REFERENCES public.user(id);
-- ALTER TABLE order_details ADD FOREIGN KEY (payment_id) REFERENCES payment_details(id);
-- replace by payment_details(payment_id)
ALTER TABLE order_details ADD FOREIGN KEY (payment_id) REFERENCES payment_details(payment_id);
ALTER TABLE payment_details ADD FOREIGN KEY (order_id) REFERENCES order_details(id);
ALTER TABLE public.product OWNER TO wakeup;
ALTER TABLE public.delivery_area OWNER TO wakeup;
ALTER TABLE public.user OWNER TO wakeup;
ALTER TABLE public.order_details OWNER TO wakeup;
ALTER TABLE public.payment_details OWNER TO wakeup;
ALTER TABLE public.order_items OWNER TO wakeup;
ALTER TABLE public.review OWNER TO wakeup;
ALTER TABLE public.special_day OWNER TO wakeup;
ALTER TABLE public.voucher OWNER TO wakeup;

-- ? FUNCTION TO CREATE USER, need object in args
CREATE OR REPLACE FUNCTION create_user(jsonb) RETURNS UUID AS $$
DECLARE
  user_id UUID;
BEGIN
  IF ($1 ? 'email' AND $1 ? 'password') THEN
    IF NOT EXISTS(SELECT U.email FROM "user" as U WHERE U.email = ($1->>'email')) THEN
      INSERT INTO "user"("email", "password", "role", "newsletter_optin")
      VALUES (
          COALESCE(($1 ->> 'email')::EMAIL, ''),
          COALESCE(($1 ->> 'password')::PASSWORD, ''),
          COALESCE(($1 ->> 'role')::TEXT, ''),
          COALESCE(($1 ->> 'newsletter_optin')::BOOLEAN, false))
      RETURNING id INTO user_id;
    ELSE
      RAISE NOTICE 'User already exists';
    END IF;
  ELSE
    INSERT INTO "user"("email", "lastname", "firstname", "address", "phone")
    VALUES (
          COALESCE(($1 ->> 'email')::EMAIL, ''),
          COALESCE(($1 ->> 'lastname')::TEXT, ''),
          COALESCE(($1 ->> 'firstname')::TEXT, ''),
          COALESCE(($1 ->> 'address')::JSON, null),
          COALESCE(($1 ->> 'phone')::TEXT, '')
          )
    RETURNING id INTO user_id;
  END IF;
    RETURN user_id;
END;
$$
LANGUAGE plpgsql;

-- ? FUNCTION TO UPDATE USER BY ID
CREATE OR REPLACE FUNCTION update_user(jsonb)
RETURNS VOID AS $$
  BEGIN
        -- Update user
        UPDATE "user"
        SET 
            "email" = COALESCE(($1 ->> 'email')::EMAIL, "email"),
            "password" = COALESCE(($1 ->> 'password')::TEXT, "password"),
            "lastname" = COALESCE(($1 ->> 'lastname')::TEXT, "lastname"), 
            "firstname" = COALESCE(($1 ->> 'firstname')::TEXT, "firstname"),
            "address" = COALESCE(($1 ->> 'address')::JSONB, "address"),
            "phone" = COALESCE(($1 ->> 'phone')::TEXT, "phone"),
            "role" = COALESCE(($1 ->> 'role')::TEXT, "role"),
            "newsletter_optin" = COALESCE(($1 ->> 'newsletter_optin')::BOOLEAN, "newsletter_optin"),
            "update_at" = NOW()
        WHERE "id" = ($1 ->> 'id')::UUID;
END;
$$
LANGUAGE plpgsql;

-- ? FUNCTION TO DELETE USER BY ID
CREATE OR REPLACE FUNCTION delete_user(userId UUID) RETURNS BOOLEAN AS
$$
DECLARE
    user_deleted BOOLEAN := false;
BEGIN
    -- Delete related records first
    UPDATE order_details 
    SET user_id = NULL
    WHERE user_id = userId;

    -- Delete the user
    DELETE FROM public.user
    WHERE id = userId;

    IF FOUND THEN
        user_deleted := true;
    END IF;

    COMMIT;
    RETURN user_deleted;
END;
$$
LANGUAGE plpgsql;

-- ? FUNCTION TO CREATE PAYMENT DETAILS, need object in args
CREATE OR REPLACE FUNCTION insert_payment_details(jsonb)
  RETURNS INTEGER
AS $$
DECLARE
  new_id INTEGER;
BEGIN
  INSERT INTO "payment_details"("amount", "status", "payment_mode", "payment_id","payment_date")
  VALUES(
    ($1 ->> 'amount')::NUMERIC(10, 2),
    ($1 ->> 'status')::VARCHAR(50),
    ($1 ->> 'payment_mode')::VARCHAR(50),
    ($1 ->> 'payment_id')::VARCHAR(100),
    to_timestamp(($1 ->> 'payment_date')::BIGINT)
  )
  RETURNING id INTO new_id;
  
  RETURN new_id;
END;
$$
LANGUAGE plpgsql;

-- ? FUNCTION TO CREATE ORDER, need object in args 
CREATE OR REPLACE FUNCTION insert_order_details(jsonb) 
RETURNS uuid AS $$
DECLARE
  new_id uuid;
BEGIN
  INSERT INTO public.order_details (
    user_id,
    total,
    booking_date,
    payment_id
  ) VALUES (
    		($1 ->> 'user_id')::uuid,
    		($1 ->> 'total')::NUMERIC(10, 2), 
    		($1 ->> 'booking_date')::TIMESTAMP,
        --! modification type payment_id en varchar
    		($1 ->> 'payment_id')::VARCHAR(100)
  ) RETURNING id INTO new_id;
  
  RETURN new_id;
END;
$$
LANGUAGE plpgsql;

-- ? TRIGGER FUNCTION TO UPDATE PAYMENT DETAILS ON INSERT ROW IN ORDER_DETAILS
CREATE OR REPLACE FUNCTION update_payment_details()
RETURNS TRIGGER AS $$
BEGIN
  UPDATE payment_details
  SET order_id = NEW.id
  --! CHANGE ID BY payment_id to set by id generated by paypal or stripe
  WHERE payment_id = NEW.payment_id;
  RETURN NEW;
END;
$$ 
LANGUAGE plpgsql;

CREATE TRIGGER order_details_trigger
AFTER INSERT ON order_details
FOR EACH ROW
EXECUTE FUNCTION update_payment_details();

--? FUNCTION CREATE ORDER_ITEMS using order_details.id, need json object
CREATE OR REPLACE FUNCTION insert_order_items(jsonb)
RETURNS INTEGER
AS $$
DECLARE
  new_id INTEGER;
BEGIN
  INSERT INTO order_items("order_id", "product_id", "quantity")
  VALUES (
    ($1 ->> 'order_id')::uuid,
    ($1 ->> 'product_id')::INT,
    ($1 ->> 'quantity')::INT
  )
  RETURNING id INTO new_id;
  
  RETURN new_id;
END;
$$
LANGUAGE plpgsql;

-- ? FUNCTION TO UPDATE PAYMENT STATUS BY PAYMENT ID
CREATE OR REPLACE FUNCTION update_payment_status_by_payment_id(
    p_payment_id VARCHAR(100),
    p_new_status VARCHAR(50)
) RETURNS VOID AS $$
BEGIN
    UPDATE public.payment_details
    SET status = p_new_status
    WHERE payment_id = p_payment_id;
    
    IF NOT FOUND THEN
        RAISE EXCEPTION 'No rows found for payment_id: %', p_payment_id;
    END IF;
END;
$$ LANGUAGE plpgsql;

-- ? FUNCTION TO CREATE EVENT ON DATE, need object in args
CREATE OR REPLACE FUNCTION create_special_day(jsonb)
RETURNS INTEGER
AS $$
DECLARE
  new_id INTEGER;
BEGIN
  INSERT INTO special_day("date", "plate_quantity", "closing_day")
  VALUES (
    COALESCE(($1 ->> 'date')::timestamptz),
    COALESCE(($1 ->> 'plate_quantity')::INT),
    COALESCE(($1 ->> 'closing_day')::BOOLEAN)
  )
  RETURNING id INTO new_id;
  
  RETURN new_id;
END;
$$
LANGUAGE plpgsql;

-- ? FUNCTION TO UPDATE EVENT ON DATE, need object in args
CREATE OR REPLACE FUNCTION update_special_day(jsonb)
RETURNS VOID AS $$
  BEGIN
        -- Update special_day
        UPDATE "special_day"
        SET 
            "plate_quantity" = COALESCE(($1 ->> 'plate_quantity')::INT, "plate_quantity"),
            "closing_day" = COALESCE(($1 ->> 'closing_day')::BOOLEAN, "closing_day")
        WHERE "date" = ($1 ->> 'date')::timestamptz;
END;
$$
LANGUAGE plpgsql;


-- ? VIEW to see all orders
CREATE VIEW getAllOrders AS 
SELECT
  u.id AS user_id,
  u.lastname AS user_lastname,
  u.firstname AS user_firstname,
  u.email AS user_email,
  u.phone AS user_phone,
  u.address AS user_address,
  od.booking_date AT TIME ZONE 'GMT-4' AS booking_date,
  od.total AS total_amount,
  pd.status AS payment_status,
  JSON_AGG(
    JSON_BUILD_OBJECT(
      'product_id', oi.product_id,
      'product_name', p.name,
	  'product_price', p.price,
	  'quantity', oi.quantity
    )
  ) AS products
FROM order_details od
JOIN payment_details pd ON od.payment_id = pd.payment_id
JOIN "user" u ON od.user_id = u.id
JOIN order_items oi ON od.id = oi.order_id
JOIN product p ON oi.product_id = p.id
WHERE pd.status = 'paid'
GROUP BY od.booking_date, od.total, pd.status, u.id, u.email
ORDER BY od.booking_date ASC;

-- ? View to see all order create by user
CREATE VIEW GetOrdersByUser AS
 SELECT u.id AS user_id,
    od.booking_date,
	od.total AS total_amount,
    pd.status AS payment_status,
    json_agg(json_build_object(
		'product_id',oi.product_id, 
		'product_name', p.name, 
		'product_price', p.price, 
		'quantity', oi.quantity)) 
		AS products
  FROM order_details od
    JOIN payment_details pd ON od.payment_id = pd.payment_id::text
    JOIN "user" u ON od.user_id = u.id
    JOIN order_items oi ON od.id = oi.order_id
    JOIN product p ON oi.product_id = p.id
  WHERE pd.status::text = 'paid'::text AND u.id = od.user_id
  GROUP BY od.booking_date, pd.status, u.id, u.email, od.total
  ORDER BY od.booking_date;

-- ? View to see all date available with plate quantity condition
CREATE VIEW getAllAvailableDates AS 
SELECT od.booking_date AT TIME ZONE 'GMT-4' AS booking_date, 
          SUM(oi.quantity) AS plate_quantity, 
          COUNT(od.id) AS order_count
        FROM 
        order_details od 
          INNER JOIN order_items oi ON od.id = oi.order_id 
          INNER JOIN payment_details pd ON od.id = pd.order_id 
          INNER JOIN product p ON oi.product_id = p.id
          WHERE 
          p.category = 'plateau'        
        AND pd.status = 'paid'
        AND od.booking_date > CURRENT_DATE
          GROUP BY 
            od.booking_date
            ORDER BY 
            od.booking_date ASC;

-- ? View to see all user
CREATE VIEW getAllUsers AS 
SELECT
    U.lastname,
    U.firstname,
    U.phone,
    U.email,
    U.address,
    jsonb_agg(jsonb_build_object('booking_date', od.booking_date, 'total_amount', od.total) 
    ORDER BY od.booking_date) AS booking_info
FROM public.user AS U
LEFT JOIN order_details AS od ON U.id = od.user_id
--! enlever U.address du group by, a tester
GROUP BY U.id, U.lastname, U.firstname, U.phone, U.email
ORDER BY U.lastname ASC;

ALTER VIEW getAllUsers OWNER TO wakeup;
ALTER VIEW getAllAvailableDates OWNER TO wakeup;
ALTER VIEW getOrdersByUser OWNER TO wakeup;
ALTER VIEW getAllOrders OWNER TO wakeup;

ALTER FUNCTION create_special_day(jsonb) OWNER TO wakeup;
ALTER FUNCTION create_user(jsonb) OWNER TO wakeup;
ALTER FUNCTION delete_user(userid uuid) OWNER TO wakeup;
ALTER FUNCTION insert_order_details(jsonb) OWNER TO wakeup;
ALTER FUNCTION insert_order_items(jsonb) OWNER TO wakeup;
ALTER FUNCTION insert_payment_details(jsonb) OWNER TO wakeup;
ALTER FUNCTION update_payment_status_by_payment_id(
    VARCHAR(100),
    VARCHAR(50)
) OWNER TO wakeup;
ALTER FUNCTION update_special_day(jsonb) OWNER TO wakeup;
ALTER FUNCTION update_user(jsonb) OWNER TO wakeup;


INSERT INTO public.product(name, subtitle, description, image, price, is_new, slug, dimension, category, weight)
	VALUES ('plateau bed & breakfast', 'ConseillÃ© pour 2-3 personnes', 'Brioche moelleuse artisanale\n
			Brioche aux pÃ©pites de chocolat artisanale\n Mini crÃªpes vanillÃ©es (fait-maison)\n Madeleines vanillÃ©es (fait-maison)\n Cake marbrÃ© (fait-maison)\n Fruits frais\n Pain artisanal tranchÃ©\n PÃ¢te Ã  tartiner et confiture (Alain Milliat).', 
			'plateau_bed_and_breakfast',
			34.90, true, 'bed-and-breakfast', '45 x 25 x 6','plateau', 1.8),
			('plateau brunch d''hiver', 'ConseillÃ© pour 2-3 personnes', 
			'Brioche moelleuse artisanale\n Pancakes vanillÃ©s (fait-maison)\n Mini crÃªpes vanillÃ©es (fait-maison)\n Madeleines vanillÃ©es (fait-maison)\n Cake marbrÃ© (fait-maison)\n Fourme d''Ambert\n Cream cheese Ã  l''huile d''olive et basilic frais\n Jambon Serrano affinage 12 mois\n Cantal entre deux AOP (lait cru)\n 
			Fruits frais, lÃ©gumes croquants\n Pain artisanal tranchÃ©\n PÃ¢te Ã  tartiner et confiture (Alain Milliat).', 
			'plateau_brunch_d_hiver', 
 			49.90, true, 'plateau-brunch-d-hiver', '45 x 25 x 6','plateau', 1.9),
			('plateau fall in love', 'ConseillÃ© pour 2 personnes', 
			'Brioche moelleuse artisanale\n Brioche aux pÃ©pites de chocolat artisanale\n Pancakes vanillÃ©s (fait-maison)\n Mini crÃªpes vanillÃ©es (fait-maison)\n Madeleines vanillÃ©es (fait-maison)\n Cake marbrÃ© (fait-maison)\n Fruits frais\n PÃ¢te Ã  tartiner et confiture (Alain Milliat).', 
			'plateau_fall_in_love', 29.90, true,'fall-in-love', 'diam. 24','plateau', 0.9),
			('mini brunch d''hiver', 'ConseillÃ© pour 2 personnes', 
			'Brioche moelleuse artisanale\n Pancakes vanillÃ©s (fait-maison)\n Mini crÃªpes vanillÃ©es (fait-maison)\n Madeleines vanillÃ©es (fait-maison)\n Cake marbrÃ© (fait-maison)\n Fourme d''Ambert\n Cream cheese Ã  l''huile d''olive et basilic frais\n Jambon Serrano affinage 12 mois\n Cantal entre deux AOP (lait cru)\n 
			Fruits frais, lÃ©gumes croquants\n Pain artisanal tranchÃ©\n PÃ¢te Ã  tartiner et confiture (Alain Milliat).', 
			'plateau_mini_brunch_d_hiver',29.90, true,'mini-brunch-hiver', 'diam. 24','plateau', 0.9),
			( 'burrata Ã  partager', 'ConseillÃ© pour 2-3 personnes', 
			'Burrata crÃ©meuse de 300g au lait de Bufflone et huile d''olive\n Jambon de Parme 16 mois d''affinage\n Pain tranchÃ©\n Fruits frais et lÃ©gumes croquants.', 
			'plateau_burrata', 36.90, true, 'burrata', 'diam. 24','plateau', 0.9),
			('mini apÃ©ritif', 'ConseillÃ© pour 3-4 personnes', 
			'Pain artisanal tranchÃ©\n Cantal entre deux AOP (lait cru)\n Fourme d''Ambert AOP (lait cru) \n Crottin de chÃ¨vre (lait cru)\n Jambon Serrano affinage 12 mois\n Pistaches sÃ©chÃ©es et figues sÃ©chÃ©es\n Fruits frais, lÃ©gumes croquants et olives verte\n Confitures (Alain Milliat).', 
			'mini_aperitif', 42.90, false, 'mini-aperitif', 'diam. 24', 'plateau', 1),
			('jus d''orange pressÃ©', '', 
			'Bouteille de 25cl de jus d''orange frais pressÃ© maison.', 
			'orange', 4.90, false,'jus-orange', '25cl', 'boisson', null),
			('prosecco riccadonna', '', 
			'Bouteille de Prosecco Riccadona de 37.5cl pour crÃ©er un cocktail mimosas, 4cl de jus d''orange mÃ©langÃ© Ã  8cl de prosecco', 
			'prosecco', 
 			9.90, false,
 			'prosecco', '37.5cl', 'boisson',null),    
			('thÃ© noir - breakfast', '', 
			'Sachet de the noir breakfast Dammann', 
			'the_dammann', 
 			1, false,
 			'the-dammann', '1 sachet', 'boisson',null),
			('noeud ruban en lin', '', 
			'Offrez un plateau avec un joli noeud fait avec un large ruban en lin', 
			'ruban', 
 			3.90, false,
 			'ruban', '1 noeud', 'decoration',null);

INSERT INTO public.blog(
	title, description, image, interaction, slug)
	VALUES ('DÃ©couvrez nos plateaux','Succombez Ã   nos plateaux gourmands, Ã©lÃ©gants et raffinÃ©s et passez un moment convivial et de partage avec vos proches. \n Nous sÃ©lectionnons des produits gourmands, et de qualitÃ© pour vous proposer le meilleur. \n Vous pouvez Ã©galement accompagner vos plateaux brunch avec une bouteille de Prosecco Riccadonna. Ce vin blanc pÃ©tillant aux fines bulles caractÃ©risÃ© par sa fraicheur et ses notes fruitÃ©es accompagnera parfaitement l''un de nos brunch ou nos plateaux apÃ©ritifs.', 'caroussel_1, caroussel_2, caroussel_3, caroussel_4, caroussel_5, caroussel_6,caroussel_7,caroussel_8', 'DÃ©couvrir', 'plateau'),
	('Offrez un moment de partage unique', 'Surprenez vos proches et offrez leur un petit-dÃ©jeuner gourmand livrÃ© Ã  domicile ! Une idÃ©e originale pour un anniversaire ou pour les fÃªtes de fin d''annÃ©e. \n Notre carte cadeau prÃªte Ã  offrir sera parfaite pour n''importe quelles occasions avec une jolie carte et son enveloppe Ã©lÃ©gante,  le cadeau parfait pour offrir un moment original et trÃ¨s gourmand ! \n Faites nous votre demande dans la rubrique Contact.', 'carte_cadeau', 'En savoir plus', 'prestation'),
	('Pour vos Ã©vÃ¨nements', 'WAKE UP vous accompagne pour vos Ã©vÃ¨nements tel qu''un anniversaire, un baptÃªme, pour un apÃ©ritif dinatoire ou un lendemain de mariage.\n Nous sommes disponibles pour Ã©changer avec vous concernant vos envies pour cet Ã©vÃ¨nement.\n Pour toute demande, merci de nous contacter au minimum 2 semaines Ã  l''avance.', 'prestation', 'Contact', 'contact'),
	('Pour vos entreprises','DÃ©couvrez nos plateaux business pour vos petits-dÃ©jeuners d''entreprise, vos rÃ©unions, vos teams building ou tout autre Ã©vÃ¨nement d''entreprise. \n Du petit-dÃ©jeuner classique au petit-dÃ©jeuner avec une touche salÃ©e, nos plateaux s''adapterons Ã  toutes les envies. \nPour toute demande, merci de nous contacter au minimum 2 semaines Ã  l''avance. Commande minimum supÃ©rieure Ã  75â¬.', 'business_homepage', 'En savoir plus', 'prestation');

INSERT INTO public.review (description, author, date, star, source)
	VALUES ('Comment ne pas mettre 5 Ã©toiles? DÃ©jÃ  c''est incroyablement beau. Plein de couleur et de relief. Et puis tout est trÃ¨s bon. Des viennoiseries aux fruits, du pain aux fromages etc... Rien n''est laissÃ© au hasard. Bref Ã  ne pas 			louper. Juste incroyable', 'AurelASM', '02-2023', 5, 'google'),
	('La box Ã©tait un rÃ©gal aussi bien pour les yeux que pour le ventre ð Les produits sont vraiment frais, trÃ¨s bons (petite mention spÃ©ciale pour le cake vanillÃ© et les pains au chocolats ð) et de qualitÃ©.
On rajoute Ã  Ã§a une Ã©quipe super sympa que ce soit en Ã©change de mails ou Ã  la livraison.
Parfait du dÃ©but Ã  la fin, merci !', 'Laurie R.', '06-2023', 5, 'google'),
('Merci Ã  Wake Up pour cet excellent petit dÃ©jeuner. Rien nâest laissÃ© au hasard : qualitÃ©, prÃ©sentation et quantitÃ© sont au rendez-vous ! A consommer sans aucune modÃ©ration. Nous nous sommes rÃ©galÃ©s !', 'Nathalie P.', '08-2023', 5, 'google'),
('Super concept ! Plateau travaillÃ© avec grand soin, les produits maisons sont succulents et variÃ©s. Dâune grande qualitÃ© pour de lâemportÃ© et Ã  lâheure au point de rdv :)', 'Charlotte D.', '07-2023', 5, 'google' ),
('Un plateau incroyable !!! IdÃ©al pour 2 ! Produits de qualitÃ© ! Le mÃ©lange des saveurs Ã©tait parfait ! Jâai dÃ©jÃ  hÃ¢te de tester les autres box !!! Vegetarian options: Il existe mÃªme dâautres box speciales vegans et vegetariens ! Kid-friendliness: Viennoiseries, fruits parfaits pour les ptits ninâs !', 'Elisabeth M.', '04-2023', 5, 'google'), 
('AprÃ¨s plusieurs commandes, produits toujours au top ! Produits frais faits maison et trÃ¨s belle prÃ©sentation. De quoi bien commencer le week-end ð¤© Petit plus : livraison trÃ¨s ponctuelle avec un service chaleureux. Je recommande Ã  100%', 'Olivia B.', '03-2023', 5, 'google'),
('Excellent ! Autant visuellement que gustativement ! Une livraison ponctuelle avec des personnes trÃ¨s sympa. Je recommande vivement les yeux fermÃ©es (cake vanille super bon ð)', 'Tiphanie R.', '06-2023', 5, 'google'),
('Des plateaux de qualitÃ© nous ont Ã©tÃ© servis Ã  lâoccasion du lendemain de notre mariage. La prÃ©sentation Ã©tait Ã  lâimage des propositions du site et les goÃ»ts ont comblÃ© nos attentes. Nos invitÃ©s ont Ã©galement apprÃ©ciÃ© dÃ©guster ce petit-dÃ©jeuner.', 'MÃ©gane V.', '08-2023', 5, 'google'),
('Nouvelle commande chez Wake Up directement livrÃ© dans notre jardin pour nous laisser faire la grasse-matinÃ©e. Produits de qualitÃ©, de saison et variÃ©s. QualitÃ© prix trÃ¨s satisfaisant. Et quelques poissons offerts en ce lundi de PÃ¢ques !!
Toujours un succÃ¨s....', 'Christel M.', '04-2023', 5, 'google'),
('Commande ce jour dâun plateau best seller, incroyablement complet et variÃ©s et surtout, produits de qualitÃ© extrÃªmement bons!', 'Ludwig D.', '02-2023', 5, 'google'),
					('Que dire de plus si ce n''est parfait ð Le froid est venu frapper Ã  notre porte quand soudain Wake up est arrivÃ© ! De la chaleur et des douceurs au petit dÃ©jeuner prÃ©parÃ©es avec sincÃ©ritÃ© et qualitÃ©. C''Ã©tait une surprise pour un anniversaire qui dÃ©buta dans l''originalitÃ©, la simplicitÃ© le tout fait maison, de saison et avec raison. Je recommencerai sans hÃ©siter !ð', 'Johanna R', '01-2023', 5, 'google'),
					('Parfait! Des produits frais et fait maison et un joli packagin pour offrir ou se faire plaisir !^^', 'Rachel B.', '12-2022', 5, 'google'),
					('Une Ã©quipe au top, trÃ¨s arrangeante et gentille ! Petit dÃ©jeuner livrÃ© Ã  domicile dans une jolie box un vrai moment de douceur et gourmandise ! Des fruits de saison, des viennoiseries, crÃªpes madeleines dÃ©licieuses, jus d''orange fraisâ¦ trÃ¨s copieux et gourmand et plein dâautres petits plaisirs salÃ©sâ¦ et les gaufres sont mon coup de cÅur ð Je recommande Ã  100%', 'Nadia E.', '11-2022', 5, 'google'),
					('On s''est rÃ©galÃ©, un vrai moment de partage et de bonheur en famille ! Merci encore ! On se fera Ã§a de nouveau rapidement ð', 'Lise B.', '11-2022', 5, 'google'),
					('Comme d''habitude, expÃ©rience au top: produits dÃ©licieux, choisis et cuisinÃ©s avec soin, box de qualitÃ© et joliment prÃ©sentÃ©e. QuantitÃ©s plus que gÃ©nÃ©reuse, au top !', 'Lucas M.', '12-2022', 5, 'google'),
					('Nous avons pris la box Best Sellers et câÃ©tait vraiment parfait. On sent que que les produits sont frais et fait maison. C''est trÃ¨s complet, variÃ© en sucrÃ© et salÃ© et pour 2 personnes câest le top. On s''est rÃ©galÃ©. Je recommande âºï¸', 'Johanna G.', '11-2022', 5, 'google'),
					('Profiter d''un dimanche cocooning avec un dÃ©licieux brunch en famille. La box est joliment prÃ©sentÃ©e, les produits sont excellents et de qualitÃ© (crÃªpes, gÃ¢teau, madelaines, etc. fait maison)Vivement la prochaine commande!', 'Fanny M.', '11-2022', 5, 'google'),
					('Nous avons pris le plateau DOLCE VITA et nous n''avons pas Ã©tÃ© dÃ©Ã§u! Une box complÃ¨te avec du sucrÃ© et du salÃ© qui nous a totalement comblÃ©, ce qui est sÃ»r, câest qu''on recommandera', 'Tamara E.', '11-2022', 5, 'google'),
					('Plateau brunch dÃ©licieux et copieux. Des produits frais et de qualitÃ© ! La prÃ©sentation est magnifique, c''est aussi beau que bon :-), l''heure de livraison est parfaitement respectÃ©e. Tout est parfait. DÃ©jÃ  hÃ¢te de passer une nouvelle commande.', 'Anne-Sophie M.', '11-2022', 5, 'google'),
					('Petit dÃ©jeuner bien prÃ©sentÃ©, dÃ©licieux, et personne en charge de la livraison trÃ¨s aimable !!!', 'MI R', '10-2022', 5, 'google'),
					('Box brunch au top, livraison sympathique Ã  l''heure annoncÃ©e. On avait choisi la box Ã  39euro, le contenu est d''un bon rapport qualitÃ©/prix. Si on pinaille, on aurait apprÃ©ciÃ© quelques cruditÃ©s (carottes ?) pour aller avec la sauce et une bouteille de jus un peu plus grande, c''Ã©tait juste pour deux. Ã mon sens les pailles biodÃ©gradables sont sympathiques mais superflues. Dans l''ensemble c''Ã©tait donc trÃ¨s bien, je recommande ! :D', 'MaÃ¯lys D.', '10-2022', 5, 'google'),
					('Merci pour ce magnifique brunch !!! C''Ã©tait exceptionnel !!! Nous avons eu que de superbes compliments â¨ Merci pour votre gentillesse', 'Manon V.', '07-2023',5 ,'instagram'),
					('Qu''est ce qu''on sâest rÃ©galÃ©s ! Petits et grands ! Vous pouvez y aller les yeux fermÃ©s ! Merci Ã  lâÃ©quipe WAKE UP !', 'Thomas L.', '10-2022', 5, 'google'),
					('TrÃ¨s beau rendu visuel, produits supers gourmands, livraison parfaite et horaires respectÃ©es ! Super moment passÃ© entre copines.', 'Laetitia M.', '09-2022', 5, 'google'),
					('C''est la 3 Ã¨me fois que nous prenons cette box et c''est toujours super bon , des produits de qualitÃ© et prix juste . Bravo ð', 'StÃ©phane M.', '09-2022', 5, 'google'),
					('J''ai commandÃ© une box sucrÃ©e. Il s''agit de ma 3 Ã¨me dÃ©gustation Wake Up et la qualitÃ© est toujours au RDV. La box est super bien garnie et prÃ©sentÃ©e. Les viennoiseries ont un feuilletage de dingue, et les fruits sont dÃ©licieux. Encore merci âºï¸ Ã  une prochaine fois !', 'Lion Lulu', '07-2022', 5, 'google'),
					('La box Dreamy porte bien son nom ! C''Ã©tait un rÃªve de dÃ©guster ce dÃ©licieux petit dÃ©jeuner, tout est parfait, bien prÃ©sentÃ©, trÃ¨s complet, service au top, je recommande +++ c''Ã©tait pour faire une surprise pour un anniversaire, et bien c''est rÃ©ussi ! J''ai hÃ¢te de refaire ma prochaine commande ! Merci Ã  vous', 'OcÃ©ane', '05-2022', 5, 'google'),
					('Avons partagÃ© Ã  2 le brunch, ce fut un dÃ©lice. Fait de viennoiserie fait maison et de produits annexes de d''excellentes qualitÃ©s, pÃ¢te Ã  tartiner et confiture. La livraison a Ã©tÃ© effectuÃ©e dans les temps impartis avec en prime le sourire de la personne qui nous a livrÃ©e. Excellente premiÃ¨re expÃ©rience, sÃ»r je renouvellerai l''expÃ©rience sans hÃ©siter. Merci Ã  toute l''Ã©quipe Wakeup', 'Myriam T.', '01-2022', 5, 'google'),
					('Je suis trÃ¨s satisfait du service. J''ai achetÃ© un petit-dÃ©jeuner pour mon petit ami d''Argentine et la livraison a Ã©tÃ© un succÃ¨s. Ils ont inclus un message personnel que je leur ai demandÃ© de faire, ils sont arrivÃ©s Ã  l''heure et la meilleure chose Ã©tait que les produits Ã©taient trÃ¨s bons. Ils m''ont fait me sentir proche de mon petit ami lors d''une journÃ©e spÃ©ciale et ils ont parfaitement compris ce dont j''avais besoin. Je recommande ce service Ã  100%.', 'Nadia G.', '03-2022', 5, 'simplybook');
        

INSERT INTO public.delivery_area(city, zipcode, price)
	VALUES ('Aulnat','63510',3.5),
		('Lussat','63360',3.5),
		('Riom','63200',5.5),
		('ChamaliÃ¨res','63400',3.5),
		('Clermont-Ferrand','63100',3.5),
		('Clermont-Ferrand','63000',3.5),
		('Beaumont','63110',5.5),
		('Pont du ChÃ¢teau','63430',3.5),
		('Gerzat','63360',3.5),
		('AubiÃ¨re','63170',3.5),
		('Lempdes','63370',3.5),
		('Romagnat','63540',5.5),
		('Cebazat','63118',3.5),
		('Le Cendre','63670',5.5),
		('Royat','63130',5.5),
		('Mozac','63200',5.5),
		('Blanzat','63112',3.5),
		('ChÃ¢teaugay','63119',5.5),
		('Orcet','63670',5.5),
		('PÃ©rignat lÃ¨s SarliÃ¨ve ','63170',5.5),
		('PÃ©rignat sur Allier','63800',5.5),
		('Ennezat','63720',5.5),
		('Sayat','63530',5.5),
		('Mezel','63115',5.5),
		('Saint-Beauzire','63360',3.5),
		('Les Martres d''ArtiÃ¨re','63430',3.5),
		('Durtol','63830',3.5),
		('Nohanent','63830',3.5),
		('MÃ©nÃ©trol','63200',5.5),
		('Chappes','63720',3.5),
		('Dallet','63111',3.5),
		('Malauzat','63200',5.5),
		('Joze','63350',5.5),
		('Malintrat','63510',3.5),
		('Chavaroux','63720',3.5),
		('Cournon-d''Auvergne','63800',5.5);
    
COMMIT;